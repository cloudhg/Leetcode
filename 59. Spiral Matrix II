Question:
Given a positive integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

Example:
Input: 3
Output:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

Source：LeetCode
link：https://leetcode-cn.com/problems/spiral-matrix-ii

-----------------------------------------   Result   --------------------------------------
CPU: 8 ms
RAM: 14.6 MB
Lang: Php
Beat: 63.16 % php

-----------------------------------------   Solution   --------------------------------------
class Solution {

    /**
     * @param Integer $n
     * @return Integer[][]
     */
    function generateMatrix($n) {
        $count = $n*$n;
        $now = $n+1;
        $sol = array_fill(0,$n,array_fill(0,$n,0));

        for ($i=0;$i<$n;$i++)
            $sol[0][$i] = $i+1; //fill first col
        
        for ($fill_times=1; $fill_times<=($n-1); $fill_times++){
            if ( ($fill_times %2) ==1 ) {//135
                $down_ofst = ($fill_times+1)/2;//123
                $x1 = $n-$down_ofst;//432
                $left_ofst = ($fill_times-1)/2;//012
                $y1 = $n-$left_ofst-2;//
                for ($i=$down_ofst;$i<=$x1;$i++){
                    $sol[$i][$x1] = $now; //down
                    $now  = $now +1;}
                for ($i=$y1;$i>=$left_ofst;$i--){
                    $sol[$x1][$i] = $now; //left
                    $now  = $now +1;}
            }
            else {// if $fill_times = 246{
                $up_ofst = ($fill_times/2);//123
                $up_str = ($fill_times/2)-1;//012
                $x2 = $n-$up_ofst-1;
                $right_ofst =  $up_ofst;
                $y2 = $n-$right_ofst-1;
                for ($i=$x2;$i>=$up_ofst;$i--){
                    $sol[$i][$up_str] = $now; //up
                    $now  = $now +1;}
                
                for ($i=$right_ofst;$i<=$y2;$i++){
                    $sol[$right_ofst][$i] = $now; //right
                    $now  = $now +1;}
            }

        }    

        return $sol;
        
    }//func end
}//class end
